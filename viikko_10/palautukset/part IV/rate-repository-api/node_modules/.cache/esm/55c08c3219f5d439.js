let http,logger,API_PORT,APOLLO_PORT,createApolloServer,app;_19f‍.w("http",[["default",["http"],function(v){http=v}]]);_19f‍.w("./utils/logger",[["default",["logger"],function(v){logger=v}]]);_19f‍.w("./config",[["API_PORT",["API_PORT"],function(v){API_PORT=v}],["APOLLO_PORT",["APOLLO_PORT"],function(v){APOLLO_PORT=v}]]);_19f‍.w("./apolloServer",[["default",["createApolloServer"],function(v){createApolloServer=v}]]);_19f‍.w("./app",[["default",["app"],function(v){app=v}]]);






const startServer = async () => {
  const httpServer = http.createServer(app);

  const apolloServer = createApolloServer();

  await apolloServer.listen({ port: APOLLO_PORT });

  httpServer.on('request', app.callback());

  await new Promise((resolve) =>
    httpServer.listen({ port: API_PORT }, resolve),
  );
  logger.info(`LOCAL Server ready at http://localhost:${API_PORT}`);
  logger.info(`Apollo Server ready at http://localhost:${APOLLO_PORT}`);
};

startServer();
